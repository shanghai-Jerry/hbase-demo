#  计算一个公司下面的每个候选人多段教育经历中的最大学历： max_degree结果很大，貌似不对
{
   var(func:uid(0x2ec64ef)) {
    ~candidate_company {
     c as uid
   }
  }
  var(func:uid(c)) @filter(has(candidate_school) and gt(count(candidate_school),1)){
     uid
     name
    candidate_school @facets(each_degree as degree_code) {
      # degree as max(val(each_degree))
    }
    degree as max(val(each_degree))
  }
  query(func:uid(degree), first:20) {
    name
    uid
    candidate_school @facets {
      name
    }
    max_degree:val(degree)
  }
}

# 另一种方式，可以获取到最高学历的那所学校
{
   var(func:uid(0x2ec64ef)) {
    ~candidate_company {
     c as uid
   }
  }
  candi as var(func:uid(c)) @filter(has(candidate_school) and gt(count(candidate_school),1)){
     uid
     name
  }
  query(func:uid(candi), first:20) {
    name
    uid
    candidate_school (first:1) @facets(orderdesc:degree_code,max_degree:degree_code) {
      name
    }
  }
}